// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PinMode PinMode is the type for the pin mode
//
// swagger:model PinMode
type PinMode string

const (

	// PinModeInput captures enum value "Input"
	PinModeInput PinMode = "Input"

	// PinModeOutput captures enum value "Output"
	PinModeOutput PinMode = "Output"
)

// for schema
var pinModeEnum []interface{}

func init() {
	var res []PinMode
	if err := json.Unmarshal([]byte(`["Input","Output"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		pinModeEnum = append(pinModeEnum, v)
	}
}

func (m PinMode) validatePinModeEnum(path, location string, value PinMode) error {
	if err := validate.Enum(path, location, value, pinModeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this pin mode
func (m PinMode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePinModeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
