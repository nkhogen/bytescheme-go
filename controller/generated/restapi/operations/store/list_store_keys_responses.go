// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"bytescheme/controller/generated/models"
)

// ListStoreKeysOKCode is the HTTP code returned for type ListStoreKeysOK
const ListStoreKeysOKCode int = 200

/*ListStoreKeysOK ListStoreKeysResponse is the response model

swagger:response listStoreKeysOK
*/
type ListStoreKeysOK struct {

	/*
	  In: Body
	*/
	Payload models.KeyValues `json:"body,omitempty"`
}

// NewListStoreKeysOK creates ListStoreKeysOK with default headers values
func NewListStoreKeysOK() *ListStoreKeysOK {

	return &ListStoreKeysOK{}
}

// WithPayload adds the payload to the list store keys o k response
func (o *ListStoreKeysOK) WithPayload(payload models.KeyValues) *ListStoreKeysOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list store keys o k response
func (o *ListStoreKeysOK) SetPayload(payload models.KeyValues) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListStoreKeysOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.KeyValues{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*ListStoreKeysDefault APIErrorResponse is all API errors

swagger:response listStoreKeysDefault
*/
type ListStoreKeysDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewListStoreKeysDefault creates ListStoreKeysDefault with default headers values
func NewListStoreKeysDefault(code int) *ListStoreKeysDefault {
	if code <= 0 {
		code = 500
	}

	return &ListStoreKeysDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the list store keys default response
func (o *ListStoreKeysDefault) WithStatusCode(code int) *ListStoreKeysDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the list store keys default response
func (o *ListStoreKeysDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the list store keys default response
func (o *ListStoreKeysDefault) WithPayload(payload *models.APIError) *ListStoreKeysDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list store keys default response
func (o *ListStoreKeysDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListStoreKeysDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
