// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewListStoreKeysParams creates a new ListStoreKeysParams object
// with the default values initialized.
func NewListStoreKeysParams() *ListStoreKeysParams {
	var ()
	return &ListStoreKeysParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListStoreKeysParamsWithTimeout creates a new ListStoreKeysParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListStoreKeysParamsWithTimeout(timeout time.Duration) *ListStoreKeysParams {
	var ()
	return &ListStoreKeysParams{

		timeout: timeout,
	}
}

// NewListStoreKeysParamsWithContext creates a new ListStoreKeysParams object
// with the default values initialized, and the ability to set a context for a request
func NewListStoreKeysParamsWithContext(ctx context.Context) *ListStoreKeysParams {
	var ()
	return &ListStoreKeysParams{

		Context: ctx,
	}
}

// NewListStoreKeysParamsWithHTTPClient creates a new ListStoreKeysParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListStoreKeysParamsWithHTTPClient(client *http.Client) *ListStoreKeysParams {
	var ()
	return &ListStoreKeysParams{
		HTTPClient: client,
	}
}

/*ListStoreKeysParams contains all the parameters to send to the API endpoint
for the list store keys operation typically these are written to a http.Request
*/
type ListStoreKeysParams struct {

	/*Authorization
	  API key

	*/
	Authorization string
	/*Key
	  Key of the value

	*/
	Key string
	/*Prefix
	  Set it to true if the key is a prefix

	*/
	Prefix *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list store keys params
func (o *ListStoreKeysParams) WithTimeout(timeout time.Duration) *ListStoreKeysParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list store keys params
func (o *ListStoreKeysParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list store keys params
func (o *ListStoreKeysParams) WithContext(ctx context.Context) *ListStoreKeysParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list store keys params
func (o *ListStoreKeysParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list store keys params
func (o *ListStoreKeysParams) WithHTTPClient(client *http.Client) *ListStoreKeysParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list store keys params
func (o *ListStoreKeysParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the list store keys params
func (o *ListStoreKeysParams) WithAuthorization(authorization string) *ListStoreKeysParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the list store keys params
func (o *ListStoreKeysParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithKey adds the key to the list store keys params
func (o *ListStoreKeysParams) WithKey(key string) *ListStoreKeysParams {
	o.SetKey(key)
	return o
}

// SetKey adds the key to the list store keys params
func (o *ListStoreKeysParams) SetKey(key string) {
	o.Key = key
}

// WithPrefix adds the prefix to the list store keys params
func (o *ListStoreKeysParams) WithPrefix(prefix *bool) *ListStoreKeysParams {
	o.SetPrefix(prefix)
	return o
}

// SetPrefix adds the prefix to the list store keys params
func (o *ListStoreKeysParams) SetPrefix(prefix *bool) {
	o.Prefix = prefix
}

// WriteToRequest writes these params to a swagger request
func (o *ListStoreKeysParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	// path param key
	if err := r.SetPathParam("key", o.Key); err != nil {
		return err
	}

	if o.Prefix != nil {

		// query param prefix
		var qrPrefix bool
		if o.Prefix != nil {
			qrPrefix = *o.Prefix
		}
		qPrefix := swag.FormatBool(qrPrefix)
		if qPrefix != "" {
			if err := r.SetQueryParam("prefix", qPrefix); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
