// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"bytescheme/controller/generated/models"
)

// ListStoreKeysReader is a Reader for the ListStoreKeys structure.
type ListStoreKeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListStoreKeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListStoreKeysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewListStoreKeysDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListStoreKeysOK creates a ListStoreKeysOK with default headers values
func NewListStoreKeysOK() *ListStoreKeysOK {
	return &ListStoreKeysOK{}
}

/*ListStoreKeysOK handles this case with default header values.

ListStoreKeysResponse is the response model
*/
type ListStoreKeysOK struct {
	Payload models.KeyValues
}

func (o *ListStoreKeysOK) Error() string {
	return fmt.Sprintf("[GET /v1/store/keys/{key}][%d] listStoreKeysOK  %+v", 200, o.Payload)
}

func (o *ListStoreKeysOK) GetPayload() models.KeyValues {
	return o.Payload
}

func (o *ListStoreKeysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListStoreKeysDefault creates a ListStoreKeysDefault with default headers values
func NewListStoreKeysDefault(code int) *ListStoreKeysDefault {
	return &ListStoreKeysDefault{
		_statusCode: code,
	}
}

/*ListStoreKeysDefault handles this case with default header values.

APIErrorResponse is all API errors
*/
type ListStoreKeysDefault struct {
	_statusCode int

	Payload *models.APIError
}

// Code gets the status code for the list store keys default response
func (o *ListStoreKeysDefault) Code() int {
	return o._statusCode
}

func (o *ListStoreKeysDefault) Error() string {
	return fmt.Sprintf("[GET /v1/store/keys/{key}][%d] ListStoreKeys default  %+v", o._statusCode, o.Payload)
}

func (o *ListStoreKeysDefault) GetPayload() *models.APIError {
	return o.Payload
}

func (o *ListStoreKeysDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
